property { 
	define {
	
		controller_RoutingError = controller.RoutingError;

		client1_illegalAccess = h1.illegalAccess;
		client2_illegalAccess = h2.illegalAccess;
		client3_illegalAccess = h3.illegalAccess;

		client1_liveness_error = h1.liveness_error;
		client2_liveness_error = h2.liveness_error;
		client3_liveness_error = h3.liveness_error;


	}
	
	Assertion{

		safety_controller_assertion4test: !(controller_RoutingError);
		safety_client1_illegalAccess: !(client1_illegalAccess);
		safety_client2_illegalAccess: !(client2_illegalAccess);
		safety_client3_illegalAccess: !(client3_illegalAccess);

		safety_client1_liveness_error: !(client1_liveness_error);
		safety_client2_liveness_error: !(client2_liveness_error);
		safety_client3_liveness_error: !(client3_liveness_error);

	}
	
}