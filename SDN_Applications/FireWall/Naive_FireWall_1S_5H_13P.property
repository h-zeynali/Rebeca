property { 
	
	define {
		client1_Illegal_access = c1.Illegal_access;
		client2_Illegal_access = c2.Illegal_access;
		client3_Illegal_access = c3.Illegal_access;
		client4_Illegal_access = c4.Illegal_access;
		client5_Illegal_access = c5.Illegal_access;
		client1_sshProtocolError = c1.sshProtocolError;
		client2_sshProtocolError = c2.sshProtocolError;
		client3_sshProtocolError = c3.sshProtocolError;
		client4_sshProtocolError = c4.sshProtocolError;
		client5_sshProtocolError = c5.sshProtocolError;

	}
	
	Assertion{
		safety_client1_Illegal_access: !(client1_Illegal_access);
		safety_client2_Illegal_access: !(client2_Illegal_access);
		safety_client3_Illegal_access: !(client3_Illegal_access);
		safety_client4_Illegal_access: !(client4_Illegal_access);
		safety_client5_Illegal_access: !(client5_Illegal_access);
		safety_client1_sshProtocolError: !(client1_sshProtocolError);
		safety_client2_sshProtocolError: !(client2_sshProtocolError);
		safety_client3_sshProtocolError: !(client3_sshProtocolError);
		safety_client4_sshProtocolError: !(client4_sshProtocolError);
		safety_client5_sshProtocolError: !(client5_sshProtocolError);
				
	}
	
}
