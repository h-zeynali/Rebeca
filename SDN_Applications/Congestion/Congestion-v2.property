property { 
	define {
	
		controller_RoutingError = controller.RoutingError;
		s1p0linkCongestion = s1.packetCountInEachPortInEachTime[0] > 1;
		s1p1linkCongestion = s1.packetCountInEachPortInEachTime[1] > 1;
		s1p2linkCongestion = s1.packetCountInEachPortInEachTime[2] > 1;
		s2p0linkCongestion = s2.packetCountInEachPortInEachTime[0] > 1;
		s2p1linkCongestion = s2.packetCountInEachPortInEachTime[1] > 1;
		s2p2linkCongestion = s2.packetCountInEachPortInEachTime[2] > 1;
		s4p0linkCongestion = s4.packetCountInEachPortInEachTime[0] > 1;
		s4p1linkCongestion = s4.packetCountInEachPortInEachTime[1] > 1;
		s4p2linkCongestion = s4.packetCountInEachPortInEachTime[2] > 1;
		s5p0linkCongestion = s5.packetCountInEachPortInEachTime[0] > 1;
		s5p1linkCongestion = s5.packetCountInEachPortInEachTime[1] > 1;
		s5p2linkCongestion = s5.packetCountInEachPortInEachTime[2] > 1;
		client1_illegalAccess = h1.illegalAccess;
		client2_illegalAccess = h2.illegalAccess;
		client3_illegalAccess = h3.illegalAccess;
		client4_illegalAccess = h4.illegalAccess;
		client5_illegalAccess = h5.illegalAccess;
		client1_liveness_error = h1.liveness_error;
		client2_liveness_error = h2.liveness_error;
		client3_liveness_error = h3.liveness_error;
		client4_liveness_error = h4.liveness_error;
		client5_liveness_error = h5.liveness_error;

	}
	
	Assertion{
		//saftys1p0SwCongestion: !(s1p0linkCongestion);
		//saftys1p1SwCongestion: !(s1p1linkCongestion);
		//saftys1p2SwCongestion: !(s1p2linkCongestion);
		saftys2p0SwCongestion: !(s2p0linkCongestion);
		saftys2p1SwCongestion: !(s2p1linkCongestion);
		saftys2p2SwCongestion: !(s2p2linkCongestion);
		saftys4p0SwCongestion: !(s4p0linkCongestion);
		saftys4p1SwCongestion: !(s4p1linkCongestion);
		saftys4p2SwCongestion: !(s4p2linkCongestion);
		//saftys5p0SwCongestion: !(s5p0linkCongestion);
		//saftys5p1SwCongestion: !(s5p1linkCongestion);
		//saftys5p2SwCongestion: !(s5p2linkCongestion);
		safety_controller_assertion4test: !(controller_RoutingError);
		safety_client1_illegalAccess: !(client1_illegalAccess);
		safety_client2_illegalAccess: !(client2_illegalAccess);
		safety_client3_illegalAccess: !(client3_illegalAccess);
		safety_client4_illegalAccess: !(client4_illegalAccess);
		safety_client5_illegalAccess: !(client5_illegalAccess);
		safety_client1_liveness_error: !(client1_liveness_error);
		safety_client2_liveness_error: !(client2_liveness_error);
		safety_client3_liveness_error: !(client3_liveness_error);
		safety_client4_liveness_error: !(client4_liveness_error);
		safety_client5_liveness_error: !(client5_liveness_error);
				
	}
	
}
